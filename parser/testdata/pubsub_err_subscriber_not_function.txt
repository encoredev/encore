! parse
err 'The function passed to `pubsub.NewSubscription` must be declared in the the same service'

-- svc/svc.go --
package svc

import (
    "context"

    "test/shared"

    "encore.dev/pubsub"
)

type MessageType struct {
    Name string
}

var (
    BasicTopic = pubsub.NewTopic[*MessageType]("basic-topic", pubsub.TopicConfig{ DeliveryGuarantee: pubsub.AtLeastOnce })
    _ = pubsub.NewSubscription(BasicTopic, "basic-subscription", pubsub.SusbcriptionConfig { Handler: shared.Subscriber })
)

// encore:api
func DoStuff(ctx context.Context) error {
    return BasicTopic.Publish(ctx, &MessageType{Name: "foo"})
}

-- shared/shared.go --
package shared

func Subscriber(ctx context.Context, msg *shared.MessageType) error {
    return nil
}

-- want: errors --

── Invalid PubSub subscription handler ────────────────────────────────────────────────────[E9999]──

The handler for the subscription must be defined in the same service as the call to
pubsub.NewSubscription.

    ╭─[ svc/svc.go:17:103 ]
    │
 15 │ var (
 16 │     BasicTopic = pubsub.NewTopic[*MessageType]("basic-topic", pubsub.TopicConfig{ DeliveryGuarantee: pubsub.AtLeastOnce })
 17 │     _ = pubsub.NewSubscription(BasicTopic, "basic-subscription", pubsub.SusbcriptionConfig { Handler: shared.Subscriber })
    ⋮                                                                                                       ────────┬────────
    ⋮                                                                                                               ╰─ handler specified here
 18 │ )
 19 │
────╯

   ╭─[ shared/shared.go:3:6 ]
   │
 1 │ package shared
 2 │
 3 │ func Subscriber(ctx context.Context, msg *shared.MessageType) error {
   ⋮      ────┬─────
   ⋮          ╰─ handler function defined here
 4 │     return nil
 5 │ }
───╯

A pubsub subscription must have a unique name per topic and be given a handler function for
processing the message. The handler for the subscription must be defined in the same service as the
call to pubsub.NewSubscription and can be an inline function. For example:
	pubsub.NewSubscription(myTopic, "subscription-name", pubsub.SubscriptionConfig[MyMessage]{
		Handler: func(ctx context.Context, event MyMessage) error { return nil },
	})

For more information on PubSub, see https://encore.dev/docs/primitives/pubsub
