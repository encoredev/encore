! parse
err 'cache.NewStringKeyspace can only be called from within Encore services'

-- svc/svc.go --
package svc

import (
    "context"

    "encore.dev/storage/cache"
)

var Cluster = cache.NewCluster("cluster", cache.ClusterConfig{})

//encore:api public
func Foo(ctx context.Context) error { return nil }

-- lib/lib.go --
package lib

import (
    "context"

    "encore.dev/storage/cache"
    "test/svc"
)

type Key[T any] struct {
    Foo T
}

var keyspace = cache.NewStringKeyspace[Key[string]](svc.Cluster, cache.KeyspaceConfig{
    KeyPattern: "foo/:Foo",
})
-- want: errors --

── Invalid Cache Keyspace ─────────────────────────────────────────────────────────────────[E9999]──

Cache keyspaces must be defined within a service.

    ╭─[ lib/lib.go:14:16 ]
    │
 12 │ }
 13 │
 14 │ var keyspace = cache.NewStringKeyspace[Key[string]](svc.Cluster, cache.KeyspaceConfig{
    ⋮                ────────────────────────────────────
 15 │     KeyPattern: "foo/:Foo",
 16 │ })
────╯

For more information see https://encore.dev/docs/primitives/caching




── Resource defined outside of service ────────────────────────────────────────────────────[E9999]──

Resources can only be defined within a service.

    ╭─[ lib/lib.go:14:16 ]
    │
 12 │     }
 13 │
 14 │     var keyspace = cache.NewStringKeyspace[Key[string]](svc.Cluster, cache.KeyspaceConfig{
    ⋮                    ▲
    ⋮ ╭──────────────────╯
 15 │ │       KeyPattern: "foo/:Foo",
 16 │ │   })
    ⋮ │    ▲
    ⋮ ├────╯
────╯
