! parse
err 'cache KeyPattern conflict'

-- svc/svc.go --
package svc

import (
    "context"

    "encore.dev/storage/cache"
)

type Key[T any] struct {
    Foo T
}

var cluster = cache.NewCluster("cluster", cache.ClusterConfig{})

var keyspace1 = cache.NewStringKeyspace[Key[string]](cluster, cache.KeyspaceConfig{
    KeyPattern: "foo/:Foo",
})

var keyspace2 = cache.NewStringKeyspace[Key[string]](cluster, cache.KeyspaceConfig{
    KeyPattern: "foo/bar/:Foo",
})

//encore:api public
func Foo(ctx context.Context) error { return nil }
-- want: errors --

── Path Conflict ──────────────────────────────────────────────────────────────────────────[E9999]──

The path segment `bar` conflicts with the path `/foo/:Foo`.

    ╭─[ svc/svc.go:16:18 ]
    │
 14 │
 15 │ var keyspace1 = cache.NewStringKeyspace[Key[string]](cluster, cache.KeyspaceConfig{
 16 │     KeyPattern: "foo/:Foo",
    ⋮                  ───────
    ·
    ·
 18 │
 19 │ var keyspace2 = cache.NewStringKeyspace[Key[string]](cluster, cache.KeyspaceConfig{
 20 │     KeyPattern: "foo/bar/:Foo",
    ⋮                  ───────────
 21 │ })
 22 │
────╯

Paths must be not be empty and always start with a '/'. You cannot define paths that conflict with
each other, including static and parameterized paths. For example `/blog/:id` would conflict with
`/:username`.

For more information about configuring Paths, see
https://encore.dev/docs/primitives/services-and-apis#rest-apis
