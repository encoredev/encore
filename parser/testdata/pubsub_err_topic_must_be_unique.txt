# Verify that pub sub is parsed
! parse
err 'A PubSub topic name must be unique within an application.'

-- shared/topics.go --
package shared

import (
    "encore.dev/pubsub"
)

type MessageType struct {
    Name string
}

var BasicTopic = pubsub.NewTopic[*MessageType]("same-name", pubsub.TopicConfig{ DeliveryGuarantee: pubsub.AtLeastOnce })

-- svc/svc.go --
package svc

import (
    "context"

    "encore.dev/pubsub"
)

type MessageType struct {
    Name string
}

var AnotherTopic = pubsub.NewTopic[*MessageType]("same-name", pubsub.TopicConfig{ DeliveryGuarantee: pubsub.AtLeastOnce })

-- want: errors --

── Duplicate PubSub topic name ────────────────────────────────────────────────────────────[E9999]──

A PubSub topic name must be unique within a service.

    ╭─[ svc/svc.go:13:50 ]
    │
 11 │ }
 12 │
 13 │ var AnotherTopic = pubsub.NewTopic[*MessageType]("same-name", pubsub.TopicConfig{ DeliveryGuarantee: pubsub.AtLeastOnce })
    ⋮                                                  ─────┬─────
    ⋮                                                       ╰─ duplicated here
 14 │
────╯

    ╭─[ shared/topics.go:11:48 ]
    │
  9 │ }
 10 │
 11 │ var BasicTopic = pubsub.NewTopic[*MessageType]("same-name", pubsub.TopicConfig{ DeliveryGuarantee: pubsub.AtLeastOnce })
    ⋮                                                ─────┬─────
    ⋮                                                     ╰─ originally defined here
 12 │
────╯

If you wish to reuse the same topic, then you can export the original Topic object import it here.

For more information on PubSub, see https://encore.dev/docs/primitives/pubsub
