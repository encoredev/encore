{
  "components": {
    "responses": {
      "APIError": {
        "content": {
          "application/json": {
            "schema": {
              "externalDocs": {
                "url": "https://pkg.go.dev/encore.dev/beta/errs#Error"
              },
              "properties": {
                "code": {
                  "description": "Error code",
                  "example": "not_found",
                  "externalDocs": {
                    "url": "https://pkg.go.dev/encore.dev/beta/errs#ErrCode"
                  },
                  "type": "string"
                },
                "details": {
                  "description": "Error details",
                  "type": "object"
                },
                "message": {
                  "description": "Error message",
                  "type": "string"
                }
              },
              "title": "APIError",
              "type": "object"
            }
          }
        },
        "description": "Error response"
      }
    },
    "schemas": {
      "authentication.User": {
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "nested.Type": {
        "properties": {
          "Message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "products.Product": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "$ref": "#/components/schemas/authentication.User"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "svc.Foo": {
        "format": "int64",
        "type": "integer"
      },
      "svc.Request": {
        "properties": {
          "Foo": {
            "$ref": "#/components/schemas/svc.Foo"
          },
          "HeaderBaz": {
            "type": "string"
          },
          "HeaderInt": {
            "format": "int64",
            "type": "integer"
          },
          "QueryBar": {
            "type": "string"
          },
          "QueryFoo": {
            "type": "boolean"
          },
          "Raw": {
            "description": "comment on the raw message!\n",
            "title": "This is a multiline\n",
            "type": "object"
          },
          "boo": {
            "title": "Baz is better\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "svc.WrappedRequest": {
        "properties": {
          "Value": {
            "$ref": "#/components/schemas/svc.Request"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "description": "Generated by encore",
    "title": "API for app",
    "version": "1",
    "x-logo": {
      "altText": "Encore logo",
      "backgroundColor": "#EEEEE1",
      "url": "https://encore.dev/assets/branding/logo/logo-black.png"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/path/{a}/{b}": {
      "get": {
        "operationId": "GET:svc.RESTPath",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      },
      "post": {
        "operationId": "POST:svc.RESTPath",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    },
    "/products.Create": {
      "post": {
        "operationId": "POST:products.Create",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "idempotency-key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_by": {
                      "$ref": "#/components/schemas/authentication.User"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    },
    "/products.List": {
      "get": {
        "operationId": "GET:products.List",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "next": {
                      "properties": {
                        "cursor": {
                          "type": "string"
                        },
                        "exists": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "previous": {
                      "properties": {
                        "cursor": {
                          "type": "string"
                        },
                        "exists": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "products": {
                      "items": {
                        "$ref": "#/components/schemas/products.Product"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    },
    "/svc.DummyAPI": {
      "post": {
        "operationId": "POST:svc.DummyAPI",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "baz",
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "int",
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "query",
            "name": "foo",
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "query",
            "name": "bar",
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "Foo": {
                    "$ref": "#/components/schemas/svc.Foo"
                  },
                  "Raw": {
                    "description": "comment on the raw message!\n",
                    "title": "This is a multiline\n",
                    "type": "object"
                  },
                  "boo": {
                    "title": "Baz is better\n",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        },
        "summary": "DummyAPI is a dummy endpoint.\n"
      }
    },
    "/svc.Get": {
      "get": {
        "operationId": "GET:svc.Get",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "query",
            "name": "boo",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    },
    "/svc.GetRequestWithAllInputTypes": {
      "get": {
        "operationId": "GET:svc.GetRequestWithAllInputTypes",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Specify this comes from a header field\n",
            "explode": true,
            "in": "header",
            "name": "x-alice",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "description": "Specify this comes from a query string\n",
            "explode": true,
            "in": "query",
            "name": "Bob",
            "required": true,
            "schema": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "allowEmptyValue": true,
            "description": "This can come from anywhere, but if it comes from the payload in JSON it must be called Charile\n",
            "explode": true,
            "in": "query",
            "name": "c",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "allowEmptyValue": true,
            "description": "This generic type complicates the whole thing 🙈\n",
            "explode": true,
            "in": "query",
            "name": "dave",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response",
            "headers": {
              "x-boolean": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "type": "boolean"
                },
                "style": "simple"
              },
              "x-bytes": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "format": "byte",
                  "type": "string"
                },
                "style": "simple"
              },
              "x-float": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "type": "number"
                },
                "style": "simple"
              },
              "x-int": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "format": "int64",
                  "type": "integer"
                },
                "style": "simple"
              },
              "x-json": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "type": "object"
                },
                "style": "simple"
              },
              "x-string": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "x-time": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "format": "date-time",
                  "type": "string"
                },
                "style": "simple"
              },
              "x-user-id": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              "x-uuid": {
                "allowEmptyValue": true,
                "explode": true,
                "required": true,
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    },
    "/svc.HeaderOnlyRequest": {
      "get": {
        "operationId": "GET:svc.HeaderOnlyRequest",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-boolean",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-int",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-float",
            "required": true,
            "schema": {
              "type": "number"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-string",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-bytes",
            "required": true,
            "schema": {
              "format": "byte",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-time",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-json",
            "required": true,
            "schema": {
              "type": "object"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-uuid",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": true,
            "in": "header",
            "name": "x-user-id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    },
    "/svc.Nested": {
      "post": {
        "operationId": "POST:svc.Nested",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "Nested": {
                    "$ref": "#/components/schemas/nested.Type"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Nested": {
                      "$ref": "#/components/schemas/nested.Type"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    },
    "/svc.RequestWithAllInputTypes": {
      "post": {
        "operationId": "POST:svc.RequestWithAllInputTypes",
        "parameters": [
          {
            "allowEmptyValue": true,
            "description": "Specify this comes from a header field\n",
            "explode": true,
            "in": "header",
            "name": "x-alice",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "description": "Specify this comes from a query string\n",
            "explode": true,
            "in": "query",
            "name": "Bob",
            "required": true,
            "schema": {
              "items": {
                "format": "int64",
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "Charlies-Bool": {
                    "title": "This can come from anywhere, but if it comes from the payload in JSON it must be\ncalled Charile\n",
                    "type": "boolean"
                  },
                  "Dave": {
                    "title": "This generic type complicates the whole thing 🙈\n",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "B": {
                      "items": {
                        "format": "int64",
                        "type": "integer"
                      },
                      "title": "Specify this comes from a query string\n",
                      "type": "array"
                    },
                    "Charlies-Bool": {
                      "title": "This can come from anywhere, but if it comes from the payload in JSON it must be\ncalled Charile\n",
                      "type": "boolean"
                    },
                    "Dave": {
                      "title": "This generic type complicates the whole thing 🙈\n",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success response",
            "headers": {
              "x-alice": {
                "allowEmptyValue": true,
                "description": "Specify this comes from a header field\n",
                "explode": true,
                "required": true,
                "schema": {
                  "format": "date-time",
                  "type": "string"
                },
                "style": "simple"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    },
    "/svc.TupleInputOutput": {
      "post": {
        "description": "and this comment is also multiline, so multiline comments get tested as well.\n",
        "operationId": "POST:svc.TupleInputOutput",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "A": {
                    "type": "string"
                  },
                  "B": {
                    "$ref": "#/components/schemas/svc.WrappedRequest"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "A": {
                      "type": "boolean"
                    },
                    "B": {
                      "$ref": "#/components/schemas/svc.Foo"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        },
        "summary": "TupleInputOutput tests the usage of generics in the client generator\n"
      }
    },
    "/webhook/{a}/{b}": {
      "delete": {
        "operationId": "DELETE:svc.Webhook",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      },
      "get": {
        "operationId": "GET:svc.Webhook",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      },
      "head": {
        "operationId": "HEAD:svc.Webhook",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      },
      "patch": {
        "operationId": "PATCH:svc.Webhook",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      },
      "post": {
        "operationId": "POST:svc.Webhook",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      },
      "put": {
        "operationId": "PUT:svc.Webhook",
        "parameters": [
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "allowEmptyValue": true,
            "explode": false,
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "Success response"
          },
          "default": {
            "$ref": "#/components/responses/APIError"
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "Encore local dev environment",
      "url": "http://localhost:4000"
    }
  ]
}