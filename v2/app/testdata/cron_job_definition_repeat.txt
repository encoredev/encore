# Verify the cron job definition
! parse
err 'cron job cronfood defined twice'

-- svc/svc.go --
package svc

import (
	"context"

	"encore.dev/cron"
)

/*
	In this example, we are defining a cron job, together with
	a random string.

	var _, bd = cron.NewJob("cronfood", cron.JobConfig{
		Title:    "Cron Food Bar",
		Schedule: "* * * * 5",
		Endpoint: Cron,
	}), "barfoo"

	We are being very explicit, and we are also giving a description
	that includes a code snippet.
*/
var _, bd = cron.NewJob("cronfood", cron.JobConfig{
	Title:    "Cron Food Bar",
	Schedule: "* * * * 5",
	Endpoint: Cron,
}), "barfoo"

// A cron job to send out push notiifications to new subscribers.
var _ = cron.NewJob("cronfood", cron.JobConfig{
	Title:    "Cron Foo Bar Bazz",
	Schedule: "* * * * 4",
	Endpoint: Cron,
})

//encore:api public path=/cron
func Cron(ctx context.Context) (*Response, error) {
	msg := "Hello, Cron!"
	return &Response{Message: msg}, nil
}

type Response struct {
	Message string
}

-- want: errors --

── Duplicate Cron Jobs ────────────────────────────────────────────────────────────────────[E9999]──

Multiple cron jobs with the same name were found. Cronjob names must be unique.

    ╭─[ svc/svc.go:22:25 ]
    │
 20 │     that includes a code snippet.
 21 │ */
 22 │ var _, bd = cron.NewJob("cronfood", cron.JobConfig{
    ⋮                         ──────────
    ·
    ·
 27 │
 28 │ // A cron job to send out push notiifications to new subscribers.
 29 │ var _ = cron.NewJob("cronfood", cron.JobConfig{
    ⋮                     ──────────
 30 │     Title:    "Cron Foo Bar Bazz",
 31 │     Schedule: "* * * * 4",
────╯

For more information, see https://encore.dev/docs/primitives/cron-jobs
