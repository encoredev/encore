-- code.go --
package code

import "context"

//encore:api public tag:foo tag:bar
func Tagged(ctx context.Context) error { return nil }
-- want:clients/code/encore.gen.go --
// Code generated by encore. DO NOT EDIT.

package codeclient

import (
	"context"
	__api "encore.dev/appruntime/apisdk/api"
	errs "encore.dev/beta/errs"
	jsoniter "github.com/json-iterator/go"
	"net/http"
	"net/url"
)

func Tagged(ctx context.Context) error {
	callCtx := __api.NewCallContext(ctx)
	req := new(EncoreInternal_TaggedReq)
	_, err := EncoreInternal_codeclient_api_APIDesc_Tagged.Call(callCtx, req)
	return err
}

// Interface defines the service's API surface area, primarily for mocking purposes.
//
// Raw endpoints are currently excluded from this interface, as Encore does not yet
// support service-to-service API calls to raw endpoints.
type Interface interface {
	Tagged(ctx context.Context) error
}

type EncoreInternal_TaggedReq struct{}

type EncoreInternal_TaggedResp = __api.Void

var EncoreInternal_codeclient_api_APIDesc_Tagged = &__api.Desc[*EncoreInternal_TaggedReq, EncoreInternal_TaggedResp]{
	Access: __api.Public,
	AppHandler: func(ctx context.Context, reqData *EncoreInternal_TaggedReq) (EncoreInternal_TaggedResp, error) {
		handlerOpt := __api.LookupEndpoint("code", "Tagged")
		handler, found := handlerOpt.Get()
		if !found {
			return __api.Void{}, errs.B().Code(errs.NotFound).Msgf("endpoint %s.%s not found", "code", "Tagged").Err()
		}
		// Cast handler to *Desc to access AppHandler
		desc := handler.(*__api.Desc[*EncoreInternal_TaggedReq, EncoreInternal_TaggedResp])
		if desc.AppHandler == nil {
			return __api.Void{}, errs.B().Code(errs.Unimplemented).Msgf("endpoint %s.%s has no AppHandler", "code", "Tagged").Err()
		}
		_, err := desc.AppHandler(ctx, reqData)
		return __api.Void{}, err
	},
	CloneReq: func(r *EncoreInternal_TaggedReq) (*EncoreInternal_TaggedReq, error) {
		var clone *EncoreInternal_TaggedReq
		bytes, err := jsoniter.ConfigDefault.Marshal(r)
		if err == nil {
			err = jsoniter.ConfigDefault.Unmarshal(bytes, &clone)
		}
		return clone, err
	},
	CloneResp: nil,
	DecodeExternalResp: func(httpResp *http.Response, json jsoniter.API) (resp EncoreInternal_TaggedResp, err error) {
		return resp, nil
	},
	DecodeReq: func(httpReq *http.Request, ps __api.UnnamedParams, json jsoniter.API) (reqData *EncoreInternal_TaggedReq, pathParams __api.UnnamedParams, err error) {
		reqData = new(EncoreInternal_TaggedReq)
		return reqData, nil, nil
	},
	DefLoc: uint32(0x0),
	EncodeExternalReq: func(reqData *EncoreInternal_TaggedReq, stream *jsoniter.Stream) (httpHeader http.Header, queryString url.Values, err error) {
		return nil, nil, nil
	},
	EncodeResp: func(w http.ResponseWriter, json jsoniter.API, resp EncoreInternal_TaggedResp, status int) (err error) {
		return nil
	},
	Endpoint:            "Tagged",
	Fallback:            false,
	GlobalMiddlewareIDs: nil,
	Methods:             []string{"GET", "POST"},
	Path:                "/code.Tagged",
	PathParamNames:      nil,
	Raw:                 false,
	RawHandler:          nil,
	RawPath:             "/code.Tagged",
	ReqPath: func(reqData *EncoreInternal_TaggedReq) (string, __api.UnnamedParams, error) {
		return "/code.Tagged", nil, nil
	},
	ReqUserPayload: func(reqData *EncoreInternal_TaggedReq) any {
		return nil
	},
	Service:           "code",
	ServiceMiddleware: nil,
	SvcNum:            1,
	Tags:              []string{"bar", "foo"},
}
-- want:encore.gen.go --
// Code generated by encore. DO NOT EDIT.

package code

import "context"

// These functions are automatically generated and maintained by Encore
// to simplify calling them from other services, as they were implemented as methods.
// They are automatically updated by Encore whenever your API endpoints change.

// Interface defines the service's API surface area, primarily for mocking purposes.
//
// Raw endpoints are currently excluded from this interface, as Encore does not yet
// support service-to-service API calls to raw endpoints.
type Interface interface {
	Tagged(ctx context.Context) error
}
-- want:encore_internal__api.go --
package code

import (
	__api "encore.dev/appruntime/apisdk/api"
	code "example.com/clients/code"
)

func init() {
	__api.RegisterEndpoint(EncoreInternal_api_APIDesc_Tagged, "Tagged")
}

var EncoreInternal_api_APIDesc_Tagged = &code.EncoreInternal_codeclient_api_APIDesc_Tagged
