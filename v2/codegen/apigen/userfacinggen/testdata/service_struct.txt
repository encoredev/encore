-- basic.go --
package basic

import ("context"; "net/http")

//encore:service
type Service struct{}

//encore:api public
func (s *Service) Foo(ctx context.Context) error { return nil }

//encore:api public raw
func (s *Service) Raw(w http.ResponseWriter, req *http.Request) {}

type Data struct{}

//encore:api public
func (s *Service) WithReq(context.Context, *Data) error { return nil }

//encore:api public
func (s *Service) WithResp(context.Context) (*Data, error) { return nil, nil }

//encore:api public
func (s *Service) WithReqResp(context.Context, *Data) (*Data, error) { return nil, nil }

//encore:api public
func NoServiceStruct(context.Context) error { return nil }
-- want:encore.gen.go --
// Code generated by encore. DO NOT EDIT.

package basic

import (
	"context"
	"errors"
	"net/http"
)

// These functions are automatically generated and maintained by Encore
// to simplify calling them from other services, as they were implemented as methods.
// They are automatically updated by Encore whenever your API endpoints change.

func Foo(ctx context.Context) error {
	svc, err := EncoreInternal_svcstruct_Service.Get()
	if err != nil {
		return err
	}
	return svc.Foo(ctx)
}

func Raw(ctx context.Context, req *http.Request) (*http.Response, error) {
	return nil, errors.New("encore: calling raw endpoints is not yet supported")
}

func WithReq(ctx context.Context, p *Data) error {
	svc, err := EncoreInternal_svcstruct_Service.Get()
	if err != nil {
		return err
	}
	return svc.WithReq(ctx, p)
}

func WithResp(ctx context.Context) (*Data, error) {
	svc, err := EncoreInternal_svcstruct_Service.Get()
	if err != nil {
		return (*Data)(nil), err
	}
	return svc.WithResp(ctx)
}

func WithReqResp(ctx context.Context, p *Data) (*Data, error) {
	svc, err := EncoreInternal_svcstruct_Service.Get()
	if err != nil {
		return (*Data)(nil), err
	}
	return svc.WithReqResp(ctx, p)
}
-- want:encore_internal__svcstruct.go --
package basic

import __service "encore.dev/appruntime/apisdk/service"

func init() {
	__service.Register(EncoreInternal_svcstruct_Service)
}

var EncoreInternal_svcstruct_Service = &__service.Decl[Service]{
	Name:        "Service",
	Service:     "basic",
	Setup:       nil,
	SetupDefLoc: int32(0),
}
