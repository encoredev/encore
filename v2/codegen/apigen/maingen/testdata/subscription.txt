-- code.go --
package code

import "context"
import "encore.dev/pubsub"

type Event struct {}

var Topic = pubsub.NewTopic[*Event]("topic", pubsub.TopicConfig{
    DeliveryGuarantee: pubsub.AtLeastOnce,
})


var _ = pubsub.NewSubscription(Topic, "subscription",
    pubsub.SubscriptionConfig[*Event]{
        Handler: func(ctx context.Context, event *Event) error {
            return nil
        },
    },
)
-- want:encore.gen.go --
// Code generated by encore. DO NOT EDIT.

package code

// These functions are automatically generated and maintained by Encore
// to simplify calling them from other services, as they were implemented as methods.
// They are automatically updated by Encore whenever your API endpoints change.
-- want:encore_internal/main/main.go --
package main

import (
	appinit "encore.dev/appruntime/apisdk/app/appinit"
	_ "example.com"
)

func main() {
	appinit.AppMain()
}
-- want:encore_internal__api.go --
package code

func init() {}
-- want:synthetic/static_config.go --
package synthetic

/*

This is a synthetic file describing the generated static config:

{
	"EncoreCompiler": "",
	"AppCommit": {
		"revision": "",
		"uncommitted": false
	},
	"CORSAllowHeaders": null,
	"CORSExposeHeaders": null,
	"PubsubTopics": {
		"topic": {
			"Subscriptions": {
				"subscription": {
					"Service": "code",
					"SvcNum": 1,
					"TraceIdx": 0
				}
			}
		}
	},
	"Testing": false,
	"TestServiceMap": {
		"code": "testing_path:code"
	},
	"PrettyPrintLogs": false,
	"BundledServices": [
		"code"
	],
	"EmbeddedEnvs": {}
}
*/
