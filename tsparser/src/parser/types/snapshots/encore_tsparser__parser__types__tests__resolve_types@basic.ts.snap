---
source: tsparser/src/parser/types/tests.rs
expression: result
input_file: tsparser/src/parser/types/testdata/basic.ts
---
{
    "Interface": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "foo",
                    ),
                    optional: false,
                    typ: Basic(
                        String,
                    ),
                },
                InterfaceField {
                    name: String(
                        "bar",
                    ),
                    optional: false,
                    typ: Basic(
                        Number,
                    ),
                },
                InterfaceField {
                    name: String(
                        "optional",
                    ),
                    optional: true,
                    typ: Basic(
                        Boolean,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Exclude1": Union(
        [
            Literal(
                String(
                    "bar",
                ),
            ),
            Literal(
                String(
                    "optional",
                ),
            ),
        ],
    ),
    "Pick1": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "foo",
                    ),
                    optional: false,
                    typ: Basic(
                        String,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Pick2": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "foo",
                    ),
                    optional: false,
                    typ: Basic(
                        String,
                    ),
                },
                InterfaceField {
                    name: String(
                        "optional",
                    ),
                    optional: true,
                    typ: Basic(
                        Boolean,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Omit1": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "bar",
                    ),
                    optional: false,
                    typ: Basic(
                        Number,
                    ),
                },
                InterfaceField {
                    name: String(
                        "optional",
                    ),
                    optional: true,
                    typ: Basic(
                        Boolean,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Omit2": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "optional",
                    ),
                    optional: true,
                    typ: Basic(
                        Boolean,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Partial1": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "foo",
                    ),
                    optional: true,
                    typ: Basic(
                        String,
                    ),
                },
                InterfaceField {
                    name: String(
                        "bar",
                    ),
                    optional: true,
                    typ: Basic(
                        Number,
                    ),
                },
                InterfaceField {
                    name: String(
                        "optional",
                    ),
                    optional: true,
                    typ: Basic(
                        Boolean,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Index": Interface(
        Interface {
            fields: [],
            index: Some(
                (
                    Basic(
                        String,
                    ),
                    Union(
                        [
                            Basic(
                                Boolean,
                            ),
                            Basic(
                                Number,
                            ),
                        ],
                    ),
                ),
            ),
            call: None,
        },
    ),
    "Intersect1": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "foo",
                    ),
                    optional: false,
                    typ: Basic(
                        String,
                    ),
                },
                InterfaceField {
                    name: String(
                        "bar",
                    ),
                    optional: false,
                    typ: Basic(
                        Number,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Intersect2": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "foo",
                    ),
                    optional: false,
                    typ: Literal(
                        String(
                            "literal",
                        ),
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Intersect3": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "foo",
                    ),
                    optional: false,
                    typ: Basic(
                        Never,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Intersect4": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "foo",
                    ),
                    optional: false,
                    typ: Literal(
                        String(
                            "optional",
                        ),
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
    "Intersect5": Interface(
        Interface {
            fields: [
                InterfaceField {
                    name: String(
                        "a",
                    ),
                    optional: false,
                    typ: Basic(
                        Any,
                    ),
                },
                InterfaceField {
                    name: String(
                        "b",
                    ),
                    optional: false,
                    typ: Basic(
                        String,
                    ),
                },
                InterfaceField {
                    name: String(
                        "c",
                    ),
                    optional: false,
                    typ: Basic(
                        Never,
                    ),
                },
            ],
            index: None,
            call: None,
        },
    ),
}
