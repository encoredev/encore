name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build ("1.2.3")'
        required: true
      encorego_version:
        description: 'Encore-Go version to use ("encore-go1.17.7")'
        required: true

jobs:
  build:
    strategy:
      matrix:
        include:
          - builder: ubuntu-latest
            goos: linux
            goarch: amd64
            release_key: linux_x86-64
          - builder: ubuntu-latest
            goos: linux
            goarch: arm64
            release_key: linux_arm64
          - builder: macos-11
            goos: darwin
            goarch: amd64
            release_key: macos_x86-64
          - builder: macos-11
            goos: darwin
            goarch: arm64
            release_key: macos_arm64
          - builder: windows-latest
            goos: windows
            goarch: amd64
            release_key: windows_x86-64

    runs-on: ${{ matrix.builder }}
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
      with:
        path: encr.dev

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Set up Zig
      uses: goto-bus-stop/setup-zig@v1
      with:
        version: 0.9.1

    - id: go-cache-paths
      run: |
        echo "::set-output name=go-mod::$(go env GOMODCACHE)"

    - name: Install encore-go
      run: curl --fail -o encore-go.tar.gz -L https://github.com/encoredev/go/releases/download/${{ github.event.inputs.encorego_version }}/${{ matrix.release_key }}.tar.gz && tar -C ${{ github.workspace }} -xzf ./encore-go.tar.gz

    - name: Go Mod Cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ matrix.goos }}-${{ matrix.goarch }}-go-mod-${{ hashFiles('**/go.sum') }}

    - name: Build
      run: cd encr.dev && go run ./pkg/make-release/make-release.go -v="${{ github.event.inputs.version }}" -dst=dist -goos=${{ matrix.goos }} -goarch=${{ matrix.goarch }} -encore-go="../encore-go"
      env:
        GO111MODULE: "on"
      if: runner.os != 'windows'

    - name: Build
      run: cd encr.dev && .\pkg\make-release\windows\build.bat
      env:
        GO111MODULE: "on"
        ENCORE_VERSION: "${{ github.event.inputs.version }}"
        ENCORE_GOROOT: "../encore-go"
      if: runner.os == 'windows'

    - name: 'Tar artifacts'
      run: tar -czvf encore-${{ github.event.inputs.version }}-${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz -C encr.dev/dist/${{ matrix.goos }}_${{ matrix.goarch }} .
    - name: Publish artifact
      uses: actions/upload-artifact@v3
      with:
        name: encore-${{ github.event.inputs.version }}-${{ matrix.goos }}_${{ matrix.goarch }}
        path: encore-${{ github.event.inputs.version }}-${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz
  notify_release_success:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Webhook
      uses: distributhor/workflow-webhook@v3
      env:
        webhook_type: 'json'
        webhook_url: ${{ secrets.RELEASE_WEBHOOK }}
        data: '{ "version": "${{ github.event.inputs.version }}", "run_id": "${{ github.run_id }}" }'
