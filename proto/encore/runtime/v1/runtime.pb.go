// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: encore/runtime/v1/runtime.proto

package runtimev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Environment_Type int32

const (
	Environment_TYPE_UNSPECIFIED Environment_Type = 0
	Environment_TYPE_DEVELOPMENT Environment_Type = 1
	Environment_TYPE_PRODUCTION  Environment_Type = 2
	Environment_TYPE_EPHEMERAL   Environment_Type = 3
	Environment_TYPE_TEST        Environment_Type = 4
)

// Enum value maps for Environment_Type.
var (
	Environment_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_DEVELOPMENT",
		2: "TYPE_PRODUCTION",
		3: "TYPE_EPHEMERAL",
		4: "TYPE_TEST",
	}
	Environment_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_DEVELOPMENT": 1,
		"TYPE_PRODUCTION":  2,
		"TYPE_EPHEMERAL":   3,
		"TYPE_TEST":        4,
	}
)

func (x Environment_Type) Enum() *Environment_Type {
	p := new(Environment_Type)
	*p = x
	return p
}

func (x Environment_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Environment_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_encore_runtime_v1_runtime_proto_enumTypes[0].Descriptor()
}

func (Environment_Type) Type() protoreflect.EnumType {
	return &file_encore_runtime_v1_runtime_proto_enumTypes[0]
}

func (x Environment_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Environment_Type.Descriptor instead.
func (Environment_Type) EnumDescriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{1, 0}
}

type Environment_Cloud int32

const (
	Environment_CLOUD_UNSPECIFIED Environment_Cloud = 0
	Environment_CLOUD_LOCAL       Environment_Cloud = 1
	Environment_CLOUD_ENCORE      Environment_Cloud = 2
	Environment_CLOUD_AWS         Environment_Cloud = 3
	Environment_CLOUD_GCP         Environment_Cloud = 4
	Environment_CLOUD_AZURE       Environment_Cloud = 5
)

// Enum value maps for Environment_Cloud.
var (
	Environment_Cloud_name = map[int32]string{
		0: "CLOUD_UNSPECIFIED",
		1: "CLOUD_LOCAL",
		2: "CLOUD_ENCORE",
		3: "CLOUD_AWS",
		4: "CLOUD_GCP",
		5: "CLOUD_AZURE",
	}
	Environment_Cloud_value = map[string]int32{
		"CLOUD_UNSPECIFIED": 0,
		"CLOUD_LOCAL":       1,
		"CLOUD_ENCORE":      2,
		"CLOUD_AWS":         3,
		"CLOUD_GCP":         4,
		"CLOUD_AZURE":       5,
	}
)

func (x Environment_Cloud) Enum() *Environment_Cloud {
	p := new(Environment_Cloud)
	*p = x
	return p
}

func (x Environment_Cloud) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Environment_Cloud) Descriptor() protoreflect.EnumDescriptor {
	return file_encore_runtime_v1_runtime_proto_enumTypes[1].Descriptor()
}

func (Environment_Cloud) Type() protoreflect.EnumType {
	return &file_encore_runtime_v1_runtime_proto_enumTypes[1]
}

func (x Environment_Cloud) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Environment_Cloud.Descriptor instead.
func (Environment_Cloud) EnumDescriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{1, 1}
}

type RuntimeConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Environment    *Environment           `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	Infra          *Infrastructure        `protobuf:"bytes,2,opt,name=infra,proto3" json:"infra,omitempty"`
	Deployment     *Deployment            `protobuf:"bytes,3,opt,name=deployment,proto3" json:"deployment,omitempty"`
	EncorePlatform *EncorePlatform        `protobuf:"bytes,5,opt,name=encore_platform,json=encorePlatform,proto3,oneof" json:"encore_platform,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RuntimeConfig) Reset() {
	*x = RuntimeConfig{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeConfig) ProtoMessage() {}

func (x *RuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeConfig.ProtoReflect.Descriptor instead.
func (*RuntimeConfig) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{0}
}

func (x *RuntimeConfig) GetEnvironment() *Environment {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *RuntimeConfig) GetInfra() *Infrastructure {
	if x != nil {
		return x.Infra
	}
	return nil
}

func (x *RuntimeConfig) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *RuntimeConfig) GetEncorePlatform() *EncorePlatform {
	if x != nil {
		return x.EncorePlatform
	}
	return nil
}

type Environment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSlug       string                 `protobuf:"bytes,2,opt,name=app_slug,json=appSlug,proto3" json:"app_slug,omitempty"`
	EnvId         string                 `protobuf:"bytes,3,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
	EnvName       string                 `protobuf:"bytes,4,opt,name=env_name,json=envName,proto3" json:"env_name,omitempty"`
	EnvType       Environment_Type       `protobuf:"varint,5,opt,name=env_type,json=envType,proto3,enum=encore.runtime.v1.Environment_Type" json:"env_type,omitempty"`
	Cloud         Environment_Cloud      `protobuf:"varint,6,opt,name=cloud,proto3,enum=encore.runtime.v1.Environment_Cloud" json:"cloud,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Environment) Reset() {
	*x = Environment{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{1}
}

func (x *Environment) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Environment) GetAppSlug() string {
	if x != nil {
		return x.AppSlug
	}
	return ""
}

func (x *Environment) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *Environment) GetEnvName() string {
	if x != nil {
		return x.EnvName
	}
	return ""
}

func (x *Environment) GetEnvType() Environment_Type {
	if x != nil {
		return x.EnvType
	}
	return Environment_TYPE_UNSPECIFIED
}

func (x *Environment) GetCloud() Environment_Cloud {
	if x != nil {
		return x.Cloud
	}
	return Environment_CLOUD_UNSPECIFIED
}

// Describes the configuration related to a specific deployment,
// meaning a group of services deployed together (think a single k8s Deployment).
type Deployment struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	DeployId   string                 `protobuf:"bytes,1,opt,name=deploy_id,json=deployId,proto3" json:"deploy_id,omitempty"`
	DeployedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=deployed_at,json=deployedAt,proto3" json:"deployed_at,omitempty"`
	// A list of experiments to enable at runtime.
	DynamicExperiments []string `protobuf:"bytes,3,rep,name=dynamic_experiments,json=dynamicExperiments,proto3" json:"dynamic_experiments,omitempty"`
	// The gateways hosted by this deployment, by rid.
	HostedGateways []string `protobuf:"bytes,4,rep,name=hosted_gateways,json=hostedGateways,proto3" json:"hosted_gateways,omitempty"`
	// The services hosted by this deployment.
	HostedServices []*HostedService `protobuf:"bytes,5,rep,name=hosted_services,json=hostedServices,proto3" json:"hosted_services,omitempty"`
	// The authentication method(s) that can be used when talking
	// to this deployment for internal service-to-service calls.
	//
	// An empty list means no service-to-service calls can be made to this deployment.
	AuthMethods []*ServiceAuth `protobuf:"bytes,6,rep,name=auth_methods,json=authMethods,proto3" json:"auth_methods,omitempty"`
	// Observability-related configuration.
	Observability *Observability `protobuf:"bytes,7,opt,name=observability,proto3" json:"observability,omitempty"`
	// Service discovery configuration.
	ServiceDiscovery *ServiceDiscovery `protobuf:"bytes,8,opt,name=service_discovery,json=serviceDiscovery,proto3" json:"service_discovery,omitempty"`
	// Graceful shutdown behavior.
	GracefulShutdown *GracefulShutdown `protobuf:"bytes,9,opt,name=graceful_shutdown,json=gracefulShutdown,proto3" json:"graceful_shutdown,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{2}
}

func (x *Deployment) GetDeployId() string {
	if x != nil {
		return x.DeployId
	}
	return ""
}

func (x *Deployment) GetDeployedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeployedAt
	}
	return nil
}

func (x *Deployment) GetDynamicExperiments() []string {
	if x != nil {
		return x.DynamicExperiments
	}
	return nil
}

func (x *Deployment) GetHostedGateways() []string {
	if x != nil {
		return x.HostedGateways
	}
	return nil
}

func (x *Deployment) GetHostedServices() []*HostedService {
	if x != nil {
		return x.HostedServices
	}
	return nil
}

func (x *Deployment) GetAuthMethods() []*ServiceAuth {
	if x != nil {
		return x.AuthMethods
	}
	return nil
}

func (x *Deployment) GetObservability() *Observability {
	if x != nil {
		return x.Observability
	}
	return nil
}

func (x *Deployment) GetServiceDiscovery() *ServiceDiscovery {
	if x != nil {
		return x.ServiceDiscovery
	}
	return nil
}

func (x *Deployment) GetGracefulShutdown() *GracefulShutdown {
	if x != nil {
		return x.GracefulShutdown
	}
	return nil
}

type Observability struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The observability providers to use.
	Tracing       []*TracingProvider `protobuf:"bytes,1,rep,name=tracing,proto3" json:"tracing,omitempty"`
	Metrics       []*MetricsProvider `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	Logs          []*LogsProvider    `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Observability) Reset() {
	*x = Observability{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Observability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observability) ProtoMessage() {}

func (x *Observability) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observability.ProtoReflect.Descriptor instead.
func (*Observability) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{3}
}

func (x *Observability) GetTracing() []*TracingProvider {
	if x != nil {
		return x.Tracing
	}
	return nil
}

func (x *Observability) GetMetrics() []*MetricsProvider {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Observability) GetLogs() []*LogsProvider {
	if x != nil {
		return x.Logs
	}
	return nil
}

type HostedService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the service.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Number of worker threads to use.
	// If unset it defaults to 1. If set to 0 the runtime
	// automatically determines the number of threads to use
	// based on the number of CPUs available.
	WorkerThreads *int32 `protobuf:"varint,2,opt,name=worker_threads,json=workerThreads,proto3,oneof" json:"worker_threads,omitempty"`
	// The log configuration to use for this service.
	// If unset it defaults to "trace".
	LogConfig     *string `protobuf:"bytes,3,opt,name=log_config,json=logConfig,proto3,oneof" json:"log_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostedService) Reset() {
	*x = HostedService{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostedService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostedService) ProtoMessage() {}

func (x *HostedService) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostedService.ProtoReflect.Descriptor instead.
func (*HostedService) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{4}
}

func (x *HostedService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostedService) GetWorkerThreads() int32 {
	if x != nil && x.WorkerThreads != nil {
		return *x.WorkerThreads
	}
	return 0
}

func (x *HostedService) GetLogConfig() string {
	if x != nil && x.LogConfig != nil {
		return *x.LogConfig
	}
	return ""
}

type ServiceAuth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The auth method to use.
	//
	// Types that are valid to be assigned to AuthMethod:
	//
	//	*ServiceAuth_Noop
	//	*ServiceAuth_EncoreAuth_
	AuthMethod    isServiceAuth_AuthMethod `protobuf_oneof:"auth_method"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAuth) Reset() {
	*x = ServiceAuth{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAuth) ProtoMessage() {}

func (x *ServiceAuth) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAuth.ProtoReflect.Descriptor instead.
func (*ServiceAuth) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceAuth) GetAuthMethod() isServiceAuth_AuthMethod {
	if x != nil {
		return x.AuthMethod
	}
	return nil
}

func (x *ServiceAuth) GetNoop() *ServiceAuth_NoopAuth {
	if x != nil {
		if x, ok := x.AuthMethod.(*ServiceAuth_Noop); ok {
			return x.Noop
		}
	}
	return nil
}

func (x *ServiceAuth) GetEncoreAuth() *ServiceAuth_EncoreAuth {
	if x != nil {
		if x, ok := x.AuthMethod.(*ServiceAuth_EncoreAuth_); ok {
			return x.EncoreAuth
		}
	}
	return nil
}

type isServiceAuth_AuthMethod interface {
	isServiceAuth_AuthMethod()
}

type ServiceAuth_Noop struct {
	// Messages start at 10 to allow for other fields on ServiceAuth.
	Noop *ServiceAuth_NoopAuth `protobuf:"bytes,10,opt,name=noop,proto3,oneof"`
}

type ServiceAuth_EncoreAuth_ struct {
	EncoreAuth *ServiceAuth_EncoreAuth `protobuf:"bytes,11,opt,name=encore_auth,json=encoreAuth,proto3,oneof"`
}

func (*ServiceAuth_Noop) isServiceAuth_AuthMethod() {}

func (*ServiceAuth_EncoreAuth_) isServiceAuth_AuthMethod() {}

type TracingProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique resource id for this provider.
	Rid string `protobuf:"bytes,1,opt,name=rid,proto3" json:"rid,omitempty"`
	// Types that are valid to be assigned to Provider:
	//
	//	*TracingProvider_Encore
	Provider      isTracingProvider_Provider `protobuf_oneof:"provider"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracingProvider) Reset() {
	*x = TracingProvider{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracingProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracingProvider) ProtoMessage() {}

func (x *TracingProvider) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracingProvider.ProtoReflect.Descriptor instead.
func (*TracingProvider) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{6}
}

func (x *TracingProvider) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *TracingProvider) GetProvider() isTracingProvider_Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *TracingProvider) GetEncore() *TracingProvider_EncoreTracingProvider {
	if x != nil {
		if x, ok := x.Provider.(*TracingProvider_Encore); ok {
			return x.Encore
		}
	}
	return nil
}

type isTracingProvider_Provider interface {
	isTracingProvider_Provider()
}

type TracingProvider_Encore struct {
	Encore *TracingProvider_EncoreTracingProvider `protobuf:"bytes,10,opt,name=encore,proto3,oneof"`
}

func (*TracingProvider_Encore) isTracingProvider_Provider() {}

type MetricsProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique resource id for this provider.
	Rid                string               `protobuf:"bytes,1,opt,name=rid,proto3" json:"rid,omitempty"`
	CollectionInterval *durationpb.Duration `protobuf:"bytes,2,opt,name=collection_interval,json=collectionInterval,proto3" json:"collection_interval,omitempty"`
	// Types that are valid to be assigned to Provider:
	//
	//	*MetricsProvider_EncoreCloud
	//	*MetricsProvider_Gcp
	//	*MetricsProvider_Aws
	//	*MetricsProvider_PromRemoteWrite
	//	*MetricsProvider_Datadog_
	Provider      isMetricsProvider_Provider `protobuf_oneof:"provider"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsProvider) Reset() {
	*x = MetricsProvider{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsProvider) ProtoMessage() {}

func (x *MetricsProvider) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsProvider.ProtoReflect.Descriptor instead.
func (*MetricsProvider) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{7}
}

func (x *MetricsProvider) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *MetricsProvider) GetCollectionInterval() *durationpb.Duration {
	if x != nil {
		return x.CollectionInterval
	}
	return nil
}

func (x *MetricsProvider) GetProvider() isMetricsProvider_Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *MetricsProvider) GetEncoreCloud() *MetricsProvider_GCPCloudMonitoring {
	if x != nil {
		if x, ok := x.Provider.(*MetricsProvider_EncoreCloud); ok {
			return x.EncoreCloud
		}
	}
	return nil
}

func (x *MetricsProvider) GetGcp() *MetricsProvider_GCPCloudMonitoring {
	if x != nil {
		if x, ok := x.Provider.(*MetricsProvider_Gcp); ok {
			return x.Gcp
		}
	}
	return nil
}

func (x *MetricsProvider) GetAws() *MetricsProvider_AWSCloudWatch {
	if x != nil {
		if x, ok := x.Provider.(*MetricsProvider_Aws); ok {
			return x.Aws
		}
	}
	return nil
}

func (x *MetricsProvider) GetPromRemoteWrite() *MetricsProvider_PrometheusRemoteWrite {
	if x != nil {
		if x, ok := x.Provider.(*MetricsProvider_PromRemoteWrite); ok {
			return x.PromRemoteWrite
		}
	}
	return nil
}

func (x *MetricsProvider) GetDatadog() *MetricsProvider_Datadog {
	if x != nil {
		if x, ok := x.Provider.(*MetricsProvider_Datadog_); ok {
			return x.Datadog
		}
	}
	return nil
}

type isMetricsProvider_Provider interface {
	isMetricsProvider_Provider()
}

type MetricsProvider_EncoreCloud struct {
	EncoreCloud *MetricsProvider_GCPCloudMonitoring `protobuf:"bytes,10,opt,name=encore_cloud,json=encoreCloud,proto3,oneof"`
}

type MetricsProvider_Gcp struct {
	Gcp *MetricsProvider_GCPCloudMonitoring `protobuf:"bytes,11,opt,name=gcp,proto3,oneof"`
}

type MetricsProvider_Aws struct {
	Aws *MetricsProvider_AWSCloudWatch `protobuf:"bytes,12,opt,name=aws,proto3,oneof"`
}

type MetricsProvider_PromRemoteWrite struct {
	PromRemoteWrite *MetricsProvider_PrometheusRemoteWrite `protobuf:"bytes,13,opt,name=prom_remote_write,json=promRemoteWrite,proto3,oneof"`
}

type MetricsProvider_Datadog_ struct {
	Datadog *MetricsProvider_Datadog `protobuf:"bytes,14,opt,name=datadog,proto3,oneof"`
}

func (*MetricsProvider_EncoreCloud) isMetricsProvider_Provider() {}

func (*MetricsProvider_Gcp) isMetricsProvider_Provider() {}

func (*MetricsProvider_Aws) isMetricsProvider_Provider() {}

func (*MetricsProvider_PromRemoteWrite) isMetricsProvider_Provider() {}

func (*MetricsProvider_Datadog_) isMetricsProvider_Provider() {}

type LogsProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique resource id for this provider.
	Rid           string `protobuf:"bytes,1,opt,name=rid,proto3" json:"rid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogsProvider) Reset() {
	*x = LogsProvider{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsProvider) ProtoMessage() {}

func (x *LogsProvider) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsProvider.ProtoReflect.Descriptor instead.
func (*LogsProvider) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{8}
}

func (x *LogsProvider) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

type EncoreAuthKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          *SecretData            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncoreAuthKey) Reset() {
	*x = EncoreAuthKey{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncoreAuthKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncoreAuthKey) ProtoMessage() {}

func (x *EncoreAuthKey) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncoreAuthKey.ProtoReflect.Descriptor instead.
func (*EncoreAuthKey) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{9}
}

func (x *EncoreAuthKey) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EncoreAuthKey) GetData() *SecretData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Describes service discovery configuration.
type ServiceDiscovery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Where services are located, keyed by the service name.
	Services      map[string]*ServiceDiscovery_Location `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceDiscovery) Reset() {
	*x = ServiceDiscovery{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceDiscovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDiscovery) ProtoMessage() {}

func (x *ServiceDiscovery) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDiscovery.ProtoReflect.Descriptor instead.
func (*ServiceDiscovery) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{10}
}

func (x *ServiceDiscovery) GetServices() map[string]*ServiceDiscovery_Location {
	if x != nil {
		return x.Services
	}
	return nil
}

// GracefulShutdown defines the graceful shutdown timings.
type GracefulShutdown struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total is how long we allow the total shutdown to take
	// before the process forcibly exits.
	Total *durationpb.Duration `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	// ShutdownHooks is how long before [total] runs out that we cancel
	// the context that is passed to the shutdown hooks.
	//
	// It is expected that ShutdownHooks is a larger value than Handlers.
	ShutdownHooks *durationpb.Duration `protobuf:"bytes,2,opt,name=shutdown_hooks,json=shutdownHooks,proto3" json:"shutdown_hooks,omitempty"`
	// Handlers is how long before [total] runs out that we cancel
	// the context that is passed to API and PubSub Subscription handlers.
	//
	// For example, if [total] is 10 seconds and [handlers] is 2 seconds,
	// then we will cancel the context passed to handlers 8 seconds after
	// a graceful shutdown is initiated.
	Handlers      *durationpb.Duration `protobuf:"bytes,3,opt,name=handlers,proto3" json:"handlers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GracefulShutdown) Reset() {
	*x = GracefulShutdown{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GracefulShutdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GracefulShutdown) ProtoMessage() {}

func (x *GracefulShutdown) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GracefulShutdown.ProtoReflect.Descriptor instead.
func (*GracefulShutdown) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{11}
}

func (x *GracefulShutdown) GetTotal() *durationpb.Duration {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *GracefulShutdown) GetShutdownHooks() *durationpb.Duration {
	if x != nil {
		return x.ShutdownHooks
	}
	return nil
}

func (x *GracefulShutdown) GetHandlers() *durationpb.Duration {
	if x != nil {
		return x.Handlers
	}
	return nil
}

type EncorePlatform struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Auth keys for validating signed requests from the Encore Platform.
	PlatformSigningKeys []*EncoreAuthKey `protobuf:"bytes,1,rep,name=platform_signing_keys,json=platformSigningKeys,proto3" json:"platform_signing_keys,omitempty"`
	// The Encore Cloud configuration to use, if running in Encore Cloud.
	EncoreCloud   *EncoreCloudProvider `protobuf:"bytes,2,opt,name=encore_cloud,json=encoreCloud,proto3,oneof" json:"encore_cloud,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncorePlatform) Reset() {
	*x = EncorePlatform{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncorePlatform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncorePlatform) ProtoMessage() {}

func (x *EncorePlatform) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncorePlatform.ProtoReflect.Descriptor instead.
func (*EncorePlatform) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{12}
}

func (x *EncorePlatform) GetPlatformSigningKeys() []*EncoreAuthKey {
	if x != nil {
		return x.PlatformSigningKeys
	}
	return nil
}

func (x *EncorePlatform) GetEncoreCloud() *EncoreCloudProvider {
	if x != nil {
		return x.EncoreCloud
	}
	return nil
}

type RateLimiter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*RateLimiter_TokenBucket_
	Kind          isRateLimiter_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimiter) Reset() {
	*x = RateLimiter{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimiter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiter) ProtoMessage() {}

func (x *RateLimiter) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiter.ProtoReflect.Descriptor instead.
func (*RateLimiter) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{13}
}

func (x *RateLimiter) GetKind() isRateLimiter_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *RateLimiter) GetTokenBucket() *RateLimiter_TokenBucket {
	if x != nil {
		if x, ok := x.Kind.(*RateLimiter_TokenBucket_); ok {
			return x.TokenBucket
		}
	}
	return nil
}

type isRateLimiter_Kind interface {
	isRateLimiter_Kind()
}

type RateLimiter_TokenBucket_ struct {
	TokenBucket *RateLimiter_TokenBucket `protobuf:"bytes,1,opt,name=token_bucket,json=tokenBucket,proto3,oneof"`
}

func (*RateLimiter_TokenBucket_) isRateLimiter_Kind() {}

type EncoreCloudProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique resource id for this provider.
	Rid string `protobuf:"bytes,1,opt,name=rid,proto3" json:"rid,omitempty"`
	// URL to use to authenticate with the server.
	ServerUrl     string           `protobuf:"bytes,2,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"`
	AuthKeys      []*EncoreAuthKey `protobuf:"bytes,3,rep,name=auth_keys,json=authKeys,proto3" json:"auth_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncoreCloudProvider) Reset() {
	*x = EncoreCloudProvider{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncoreCloudProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncoreCloudProvider) ProtoMessage() {}

func (x *EncoreCloudProvider) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncoreCloudProvider.ProtoReflect.Descriptor instead.
func (*EncoreCloudProvider) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{14}
}

func (x *EncoreCloudProvider) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *EncoreCloudProvider) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *EncoreCloudProvider) GetAuthKeys() []*EncoreAuthKey {
	if x != nil {
		return x.AuthKeys
	}
	return nil
}

type ServiceAuth_NoopAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAuth_NoopAuth) Reset() {
	*x = ServiceAuth_NoopAuth{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAuth_NoopAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAuth_NoopAuth) ProtoMessage() {}

func (x *ServiceAuth_NoopAuth) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAuth_NoopAuth.ProtoReflect.Descriptor instead.
func (*ServiceAuth_NoopAuth) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{5, 0}
}

type ServiceAuth_EncoreAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthKeys      []*EncoreAuthKey       `protobuf:"bytes,1,rep,name=auth_keys,json=authKeys,proto3" json:"auth_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceAuth_EncoreAuth) Reset() {
	*x = ServiceAuth_EncoreAuth{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceAuth_EncoreAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAuth_EncoreAuth) ProtoMessage() {}

func (x *ServiceAuth_EncoreAuth) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAuth_EncoreAuth.ProtoReflect.Descriptor instead.
func (*ServiceAuth_EncoreAuth) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ServiceAuth_EncoreAuth) GetAuthKeys() []*EncoreAuthKey {
	if x != nil {
		return x.AuthKeys
	}
	return nil
}

type TracingProvider_EncoreTracingProvider struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TraceEndpoint string                 `protobuf:"bytes,1,opt,name=trace_endpoint,json=traceEndpoint,proto3" json:"trace_endpoint,omitempty"`
	// The sampling rate to use for traces, between [0, 1].
	// If unset it defaults to 1 (meaning all requests are traced).
	SamplingRate  *float64 `protobuf:"fixed64,2,opt,name=sampling_rate,json=samplingRate,proto3,oneof" json:"sampling_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracingProvider_EncoreTracingProvider) Reset() {
	*x = TracingProvider_EncoreTracingProvider{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracingProvider_EncoreTracingProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracingProvider_EncoreTracingProvider) ProtoMessage() {}

func (x *TracingProvider_EncoreTracingProvider) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracingProvider_EncoreTracingProvider.ProtoReflect.Descriptor instead.
func (*TracingProvider_EncoreTracingProvider) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TracingProvider_EncoreTracingProvider) GetTraceEndpoint() string {
	if x != nil {
		return x.TraceEndpoint
	}
	return ""
}

func (x *TracingProvider_EncoreTracingProvider) GetSamplingRate() float64 {
	if x != nil && x.SamplingRate != nil {
		return *x.SamplingRate
	}
	return 0
}

type MetricsProvider_GCPCloudMonitoring struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The GCP project id to send metrics to.
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The enum value for the monitored resource this application is monitoring.
	// See https://cloud.google.com/monitoring/api/resources for valid values.
	MonitoredResourceType string `protobuf:"bytes,2,opt,name=monitored_resource_type,json=monitoredResourceType,proto3" json:"monitored_resource_type,omitempty"`
	// The labels to specify for the monitored resource.
	// Each monitored resource type has a pre-defined set of labels that must be set.
	// See https://cloud.google.com/monitoring/api/resources for expected labels.
	MonitoredResourceLabels map[string]string `protobuf:"bytes,3,rep,name=monitored_resource_labels,json=monitoredResourceLabels,proto3" json:"monitored_resource_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The mapping between metric names in Encore and metric names in GCP.
	MetricNames   map[string]string `protobuf:"bytes,4,rep,name=metric_names,json=metricNames,proto3" json:"metric_names,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsProvider_GCPCloudMonitoring) Reset() {
	*x = MetricsProvider_GCPCloudMonitoring{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsProvider_GCPCloudMonitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsProvider_GCPCloudMonitoring) ProtoMessage() {}

func (x *MetricsProvider_GCPCloudMonitoring) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsProvider_GCPCloudMonitoring.ProtoReflect.Descriptor instead.
func (*MetricsProvider_GCPCloudMonitoring) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{7, 0}
}

func (x *MetricsProvider_GCPCloudMonitoring) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *MetricsProvider_GCPCloudMonitoring) GetMonitoredResourceType() string {
	if x != nil {
		return x.MonitoredResourceType
	}
	return ""
}

func (x *MetricsProvider_GCPCloudMonitoring) GetMonitoredResourceLabels() map[string]string {
	if x != nil {
		return x.MonitoredResourceLabels
	}
	return nil
}

func (x *MetricsProvider_GCPCloudMonitoring) GetMetricNames() map[string]string {
	if x != nil {
		return x.MetricNames
	}
	return nil
}

type MetricsProvider_AWSCloudWatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The namespace to use for metrics.
	Namespace     string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsProvider_AWSCloudWatch) Reset() {
	*x = MetricsProvider_AWSCloudWatch{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsProvider_AWSCloudWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsProvider_AWSCloudWatch) ProtoMessage() {}

func (x *MetricsProvider_AWSCloudWatch) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsProvider_AWSCloudWatch.ProtoReflect.Descriptor instead.
func (*MetricsProvider_AWSCloudWatch) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{7, 1}
}

func (x *MetricsProvider_AWSCloudWatch) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type MetricsProvider_PrometheusRemoteWrite struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The URL to send metrics to.
	RemoteWriteUrl *SecretData `protobuf:"bytes,1,opt,name=remote_write_url,json=remoteWriteUrl,proto3" json:"remote_write_url,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MetricsProvider_PrometheusRemoteWrite) Reset() {
	*x = MetricsProvider_PrometheusRemoteWrite{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsProvider_PrometheusRemoteWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsProvider_PrometheusRemoteWrite) ProtoMessage() {}

func (x *MetricsProvider_PrometheusRemoteWrite) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsProvider_PrometheusRemoteWrite.ProtoReflect.Descriptor instead.
func (*MetricsProvider_PrometheusRemoteWrite) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{7, 2}
}

func (x *MetricsProvider_PrometheusRemoteWrite) GetRemoteWriteUrl() *SecretData {
	if x != nil {
		return x.RemoteWriteUrl
	}
	return nil
}

type MetricsProvider_Datadog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Site          string                 `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
	ApiKey        *SecretData            `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsProvider_Datadog) Reset() {
	*x = MetricsProvider_Datadog{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsProvider_Datadog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsProvider_Datadog) ProtoMessage() {}

func (x *MetricsProvider_Datadog) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsProvider_Datadog.ProtoReflect.Descriptor instead.
func (*MetricsProvider_Datadog) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{7, 3}
}

func (x *MetricsProvider_Datadog) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *MetricsProvider_Datadog) GetApiKey() *SecretData {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

type ServiceDiscovery_Location struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The base URL of the service (including scheme and port).
	BaseUrl string `protobuf:"bytes,1,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// The auth methods to use when talking to this service.
	AuthMethods   []*ServiceAuth `protobuf:"bytes,2,rep,name=auth_methods,json=authMethods,proto3" json:"auth_methods,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceDiscovery_Location) Reset() {
	*x = ServiceDiscovery_Location{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceDiscovery_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceDiscovery_Location) ProtoMessage() {}

func (x *ServiceDiscovery_Location) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceDiscovery_Location.ProtoReflect.Descriptor instead.
func (*ServiceDiscovery_Location) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{10, 1}
}

func (x *ServiceDiscovery_Location) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

func (x *ServiceDiscovery_Location) GetAuthMethods() []*ServiceAuth {
	if x != nil {
		return x.AuthMethods
	}
	return nil
}

type RateLimiter_TokenBucket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The rate (in events per per second) to allow.
	Rate float64 `protobuf:"fixed64,1,opt,name=rate,proto3" json:"rate,omitempty"`
	// The burst size to allow.
	Burst         uint32 `protobuf:"varint,2,opt,name=burst,proto3" json:"burst,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimiter_TokenBucket) Reset() {
	*x = RateLimiter_TokenBucket{}
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimiter_TokenBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimiter_TokenBucket) ProtoMessage() {}

func (x *RateLimiter_TokenBucket) ProtoReflect() protoreflect.Message {
	mi := &file_encore_runtime_v1_runtime_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimiter_TokenBucket.ProtoReflect.Descriptor instead.
func (*RateLimiter_TokenBucket) Descriptor() ([]byte, []int) {
	return file_encore_runtime_v1_runtime_proto_rawDescGZIP(), []int{13, 0}
}

func (x *RateLimiter_TokenBucket) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *RateLimiter_TokenBucket) GetBurst() uint32 {
	if x != nil {
		return x.Burst
	}
	return 0
}

var File_encore_runtime_v1_runtime_proto protoreflect.FileDescriptor

const file_encore_runtime_v1_runtime_proto_rawDesc = "" +
	"\n" +
	"\x1fencore/runtime/v1/runtime.proto\x12\x11encore.runtime.v1\x1a\x1dencore/runtime/v1/infra.proto\x1a\"encore/runtime/v1/secretdata.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xae\x02\n" +
	"\rRuntimeConfig\x12@\n" +
	"\venvironment\x18\x01 \x01(\v2\x1e.encore.runtime.v1.EnvironmentR\venvironment\x127\n" +
	"\x05infra\x18\x02 \x01(\v2!.encore.runtime.v1.InfrastructureR\x05infra\x12=\n" +
	"\n" +
	"deployment\x18\x03 \x01(\v2\x1d.encore.runtime.v1.DeploymentR\n" +
	"deployment\x12O\n" +
	"\x0fencore_platform\x18\x05 \x01(\v2!.encore.runtime.v1.EncorePlatformH\x00R\x0eencorePlatform\x88\x01\x01B\x12\n" +
	"\x10_encore_platform\"\xcb\x03\n" +
	"\vEnvironment\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12\x19\n" +
	"\bapp_slug\x18\x02 \x01(\tR\aappSlug\x12\x15\n" +
	"\x06env_id\x18\x03 \x01(\tR\x05envId\x12\x19\n" +
	"\benv_name\x18\x04 \x01(\tR\aenvName\x12>\n" +
	"\benv_type\x18\x05 \x01(\x0e2#.encore.runtime.v1.Environment.TypeR\aenvType\x12:\n" +
	"\x05cloud\x18\x06 \x01(\x0e2$.encore.runtime.v1.Environment.CloudR\x05cloud\"j\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10TYPE_DEVELOPMENT\x10\x01\x12\x13\n" +
	"\x0fTYPE_PRODUCTION\x10\x02\x12\x12\n" +
	"\x0eTYPE_EPHEMERAL\x10\x03\x12\r\n" +
	"\tTYPE_TEST\x10\x04\"p\n" +
	"\x05Cloud\x12\x15\n" +
	"\x11CLOUD_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vCLOUD_LOCAL\x10\x01\x12\x10\n" +
	"\fCLOUD_ENCORE\x10\x02\x12\r\n" +
	"\tCLOUD_AWS\x10\x03\x12\r\n" +
	"\tCLOUD_GCP\x10\x04\x12\x0f\n" +
	"\vCLOUD_AZURE\x10\x05\"\xba\x04\n" +
	"\n" +
	"Deployment\x12\x1b\n" +
	"\tdeploy_id\x18\x01 \x01(\tR\bdeployId\x12;\n" +
	"\vdeployed_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"deployedAt\x12/\n" +
	"\x13dynamic_experiments\x18\x03 \x03(\tR\x12dynamicExperiments\x12'\n" +
	"\x0fhosted_gateways\x18\x04 \x03(\tR\x0ehostedGateways\x12I\n" +
	"\x0fhosted_services\x18\x05 \x03(\v2 .encore.runtime.v1.HostedServiceR\x0ehostedServices\x12A\n" +
	"\fauth_methods\x18\x06 \x03(\v2\x1e.encore.runtime.v1.ServiceAuthR\vauthMethods\x12F\n" +
	"\robservability\x18\a \x01(\v2 .encore.runtime.v1.ObservabilityR\robservability\x12P\n" +
	"\x11service_discovery\x18\b \x01(\v2#.encore.runtime.v1.ServiceDiscoveryR\x10serviceDiscovery\x12P\n" +
	"\x11graceful_shutdown\x18\t \x01(\v2#.encore.runtime.v1.GracefulShutdownR\x10gracefulShutdown\"\xc0\x01\n" +
	"\rObservability\x12<\n" +
	"\atracing\x18\x01 \x03(\v2\".encore.runtime.v1.TracingProviderR\atracing\x12<\n" +
	"\ametrics\x18\x02 \x03(\v2\".encore.runtime.v1.MetricsProviderR\ametrics\x123\n" +
	"\x04logs\x18\x03 \x03(\v2\x1f.encore.runtime.v1.LogsProviderR\x04logs\"\x95\x01\n" +
	"\rHostedService\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12*\n" +
	"\x0eworker_threads\x18\x02 \x01(\x05H\x00R\rworkerThreads\x88\x01\x01\x12\"\n" +
	"\n" +
	"log_config\x18\x03 \x01(\tH\x01R\tlogConfig\x88\x01\x01B\x11\n" +
	"\x0f_worker_threadsB\r\n" +
	"\v_log_config\"\x82\x02\n" +
	"\vServiceAuth\x12=\n" +
	"\x04noop\x18\n" +
	" \x01(\v2'.encore.runtime.v1.ServiceAuth.NoopAuthH\x00R\x04noop\x12L\n" +
	"\vencore_auth\x18\v \x01(\v2).encore.runtime.v1.ServiceAuth.EncoreAuthH\x00R\n" +
	"encoreAuth\x1a\n" +
	"\n" +
	"\bNoopAuth\x1aK\n" +
	"\n" +
	"EncoreAuth\x12=\n" +
	"\tauth_keys\x18\x01 \x03(\v2 .encore.runtime.v1.EncoreAuthKeyR\bauthKeysB\r\n" +
	"\vauth_method\"\xff\x01\n" +
	"\x0fTracingProvider\x12\x10\n" +
	"\x03rid\x18\x01 \x01(\tR\x03rid\x12R\n" +
	"\x06encore\x18\n" +
	" \x01(\v28.encore.runtime.v1.TracingProvider.EncoreTracingProviderH\x00R\x06encore\x1az\n" +
	"\x15EncoreTracingProvider\x12%\n" +
	"\x0etrace_endpoint\x18\x01 \x01(\tR\rtraceEndpoint\x12(\n" +
	"\rsampling_rate\x18\x02 \x01(\x01H\x00R\fsamplingRate\x88\x01\x01B\x10\n" +
	"\x0e_sampling_rateB\n" +
	"\n" +
	"\bprovider\"\xf6\t\n" +
	"\x0fMetricsProvider\x12\x10\n" +
	"\x03rid\x18\x01 \x01(\tR\x03rid\x12J\n" +
	"\x13collection_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x12collectionInterval\x12Z\n" +
	"\fencore_cloud\x18\n" +
	" \x01(\v25.encore.runtime.v1.MetricsProvider.GCPCloudMonitoringH\x00R\vencoreCloud\x12I\n" +
	"\x03gcp\x18\v \x01(\v25.encore.runtime.v1.MetricsProvider.GCPCloudMonitoringH\x00R\x03gcp\x12D\n" +
	"\x03aws\x18\f \x01(\v20.encore.runtime.v1.MetricsProvider.AWSCloudWatchH\x00R\x03aws\x12f\n" +
	"\x11prom_remote_write\x18\r \x01(\v28.encore.runtime.v1.MetricsProvider.PrometheusRemoteWriteH\x00R\x0fpromRemoteWrite\x12F\n" +
	"\adatadog\x18\x0e \x01(\v2*.encore.runtime.v1.MetricsProvider.DatadogH\x00R\adatadog\x1a\xf3\x03\n" +
	"\x12GCPCloudMonitoring\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x126\n" +
	"\x17monitored_resource_type\x18\x02 \x01(\tR\x15monitoredResourceType\x12\x8e\x01\n" +
	"\x19monitored_resource_labels\x18\x03 \x03(\v2R.encore.runtime.v1.MetricsProvider.GCPCloudMonitoring.MonitoredResourceLabelsEntryR\x17monitoredResourceLabels\x12i\n" +
	"\fmetric_names\x18\x04 \x03(\v2F.encore.runtime.v1.MetricsProvider.GCPCloudMonitoring.MetricNamesEntryR\vmetricNames\x1aJ\n" +
	"\x1cMonitoredResourceLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10MetricNamesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a-\n" +
	"\rAWSCloudWatch\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x1a`\n" +
	"\x15PrometheusRemoteWrite\x12G\n" +
	"\x10remote_write_url\x18\x01 \x01(\v2\x1d.encore.runtime.v1.SecretDataR\x0eremoteWriteUrl\x1aU\n" +
	"\aDatadog\x12\x12\n" +
	"\x04site\x18\x01 \x01(\tR\x04site\x126\n" +
	"\aapi_key\x18\x02 \x01(\v2\x1d.encore.runtime.v1.SecretDataR\x06apiKeyB\n" +
	"\n" +
	"\bprovider\" \n" +
	"\fLogsProvider\x12\x10\n" +
	"\x03rid\x18\x01 \x01(\tR\x03rid\"R\n" +
	"\rEncoreAuthKey\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x121\n" +
	"\x04data\x18\x02 \x01(\v2\x1d.encore.runtime.v1.SecretDataR\x04data\"\xb6\x02\n" +
	"\x10ServiceDiscovery\x12M\n" +
	"\bservices\x18\x01 \x03(\v21.encore.runtime.v1.ServiceDiscovery.ServicesEntryR\bservices\x1ai\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12B\n" +
	"\x05value\x18\x02 \x01(\v2,.encore.runtime.v1.ServiceDiscovery.LocationR\x05value:\x028\x01\x1ah\n" +
	"\bLocation\x12\x19\n" +
	"\bbase_url\x18\x01 \x01(\tR\abaseUrl\x12A\n" +
	"\fauth_methods\x18\x02 \x03(\v2\x1e.encore.runtime.v1.ServiceAuthR\vauthMethods\"\xbc\x01\n" +
	"\x10GracefulShutdown\x12/\n" +
	"\x05total\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x05total\x12@\n" +
	"\x0eshutdown_hooks\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\rshutdownHooks\x125\n" +
	"\bhandlers\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\bhandlers\"\xc7\x01\n" +
	"\x0eEncorePlatform\x12T\n" +
	"\x15platform_signing_keys\x18\x01 \x03(\v2 .encore.runtime.v1.EncoreAuthKeyR\x13platformSigningKeys\x12N\n" +
	"\fencore_cloud\x18\x02 \x01(\v2&.encore.runtime.v1.EncoreCloudProviderH\x00R\vencoreCloud\x88\x01\x01B\x0f\n" +
	"\r_encore_cloud\"\x9f\x01\n" +
	"\vRateLimiter\x12O\n" +
	"\ftoken_bucket\x18\x01 \x01(\v2*.encore.runtime.v1.RateLimiter.TokenBucketH\x00R\vtokenBucket\x1a7\n" +
	"\vTokenBucket\x12\x12\n" +
	"\x04rate\x18\x01 \x01(\x01R\x04rate\x12\x14\n" +
	"\x05burst\x18\x02 \x01(\rR\x05burstB\x06\n" +
	"\x04kind\"\x85\x01\n" +
	"\x13EncoreCloudProvider\x12\x10\n" +
	"\x03rid\x18\x01 \x01(\tR\x03rid\x12\x1d\n" +
	"\n" +
	"server_url\x18\x02 \x01(\tR\tserverUrl\x12=\n" +
	"\tauth_keys\x18\x03 \x03(\v2 .encore.runtime.v1.EncoreAuthKeyR\bauthKeysB,Z*encr.dev/proto/encore/runtime/v1;runtimev1b\x06proto3"

var (
	file_encore_runtime_v1_runtime_proto_rawDescOnce sync.Once
	file_encore_runtime_v1_runtime_proto_rawDescData []byte
)

func file_encore_runtime_v1_runtime_proto_rawDescGZIP() []byte {
	file_encore_runtime_v1_runtime_proto_rawDescOnce.Do(func() {
		file_encore_runtime_v1_runtime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_encore_runtime_v1_runtime_proto_rawDesc), len(file_encore_runtime_v1_runtime_proto_rawDesc)))
	})
	return file_encore_runtime_v1_runtime_proto_rawDescData
}

var file_encore_runtime_v1_runtime_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_encore_runtime_v1_runtime_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_encore_runtime_v1_runtime_proto_goTypes = []any{
	(Environment_Type)(0),                         // 0: encore.runtime.v1.Environment.Type
	(Environment_Cloud)(0),                        // 1: encore.runtime.v1.Environment.Cloud
	(*RuntimeConfig)(nil),                         // 2: encore.runtime.v1.RuntimeConfig
	(*Environment)(nil),                           // 3: encore.runtime.v1.Environment
	(*Deployment)(nil),                            // 4: encore.runtime.v1.Deployment
	(*Observability)(nil),                         // 5: encore.runtime.v1.Observability
	(*HostedService)(nil),                         // 6: encore.runtime.v1.HostedService
	(*ServiceAuth)(nil),                           // 7: encore.runtime.v1.ServiceAuth
	(*TracingProvider)(nil),                       // 8: encore.runtime.v1.TracingProvider
	(*MetricsProvider)(nil),                       // 9: encore.runtime.v1.MetricsProvider
	(*LogsProvider)(nil),                          // 10: encore.runtime.v1.LogsProvider
	(*EncoreAuthKey)(nil),                         // 11: encore.runtime.v1.EncoreAuthKey
	(*ServiceDiscovery)(nil),                      // 12: encore.runtime.v1.ServiceDiscovery
	(*GracefulShutdown)(nil),                      // 13: encore.runtime.v1.GracefulShutdown
	(*EncorePlatform)(nil),                        // 14: encore.runtime.v1.EncorePlatform
	(*RateLimiter)(nil),                           // 15: encore.runtime.v1.RateLimiter
	(*EncoreCloudProvider)(nil),                   // 16: encore.runtime.v1.EncoreCloudProvider
	(*ServiceAuth_NoopAuth)(nil),                  // 17: encore.runtime.v1.ServiceAuth.NoopAuth
	(*ServiceAuth_EncoreAuth)(nil),                // 18: encore.runtime.v1.ServiceAuth.EncoreAuth
	(*TracingProvider_EncoreTracingProvider)(nil), // 19: encore.runtime.v1.TracingProvider.EncoreTracingProvider
	(*MetricsProvider_GCPCloudMonitoring)(nil),    // 20: encore.runtime.v1.MetricsProvider.GCPCloudMonitoring
	(*MetricsProvider_AWSCloudWatch)(nil),         // 21: encore.runtime.v1.MetricsProvider.AWSCloudWatch
	(*MetricsProvider_PrometheusRemoteWrite)(nil), // 22: encore.runtime.v1.MetricsProvider.PrometheusRemoteWrite
	(*MetricsProvider_Datadog)(nil),               // 23: encore.runtime.v1.MetricsProvider.Datadog
	nil,                                           // 24: encore.runtime.v1.MetricsProvider.GCPCloudMonitoring.MonitoredResourceLabelsEntry
	nil,                                           // 25: encore.runtime.v1.MetricsProvider.GCPCloudMonitoring.MetricNamesEntry
	nil,                                           // 26: encore.runtime.v1.ServiceDiscovery.ServicesEntry
	(*ServiceDiscovery_Location)(nil),             // 27: encore.runtime.v1.ServiceDiscovery.Location
	(*RateLimiter_TokenBucket)(nil),               // 28: encore.runtime.v1.RateLimiter.TokenBucket
	(*Infrastructure)(nil),                        // 29: encore.runtime.v1.Infrastructure
	(*timestamppb.Timestamp)(nil),                 // 30: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                   // 31: google.protobuf.Duration
	(*SecretData)(nil),                            // 32: encore.runtime.v1.SecretData
}
var file_encore_runtime_v1_runtime_proto_depIdxs = []int32{
	3,  // 0: encore.runtime.v1.RuntimeConfig.environment:type_name -> encore.runtime.v1.Environment
	29, // 1: encore.runtime.v1.RuntimeConfig.infra:type_name -> encore.runtime.v1.Infrastructure
	4,  // 2: encore.runtime.v1.RuntimeConfig.deployment:type_name -> encore.runtime.v1.Deployment
	14, // 3: encore.runtime.v1.RuntimeConfig.encore_platform:type_name -> encore.runtime.v1.EncorePlatform
	0,  // 4: encore.runtime.v1.Environment.env_type:type_name -> encore.runtime.v1.Environment.Type
	1,  // 5: encore.runtime.v1.Environment.cloud:type_name -> encore.runtime.v1.Environment.Cloud
	30, // 6: encore.runtime.v1.Deployment.deployed_at:type_name -> google.protobuf.Timestamp
	6,  // 7: encore.runtime.v1.Deployment.hosted_services:type_name -> encore.runtime.v1.HostedService
	7,  // 8: encore.runtime.v1.Deployment.auth_methods:type_name -> encore.runtime.v1.ServiceAuth
	5,  // 9: encore.runtime.v1.Deployment.observability:type_name -> encore.runtime.v1.Observability
	12, // 10: encore.runtime.v1.Deployment.service_discovery:type_name -> encore.runtime.v1.ServiceDiscovery
	13, // 11: encore.runtime.v1.Deployment.graceful_shutdown:type_name -> encore.runtime.v1.GracefulShutdown
	8,  // 12: encore.runtime.v1.Observability.tracing:type_name -> encore.runtime.v1.TracingProvider
	9,  // 13: encore.runtime.v1.Observability.metrics:type_name -> encore.runtime.v1.MetricsProvider
	10, // 14: encore.runtime.v1.Observability.logs:type_name -> encore.runtime.v1.LogsProvider
	17, // 15: encore.runtime.v1.ServiceAuth.noop:type_name -> encore.runtime.v1.ServiceAuth.NoopAuth
	18, // 16: encore.runtime.v1.ServiceAuth.encore_auth:type_name -> encore.runtime.v1.ServiceAuth.EncoreAuth
	19, // 17: encore.runtime.v1.TracingProvider.encore:type_name -> encore.runtime.v1.TracingProvider.EncoreTracingProvider
	31, // 18: encore.runtime.v1.MetricsProvider.collection_interval:type_name -> google.protobuf.Duration
	20, // 19: encore.runtime.v1.MetricsProvider.encore_cloud:type_name -> encore.runtime.v1.MetricsProvider.GCPCloudMonitoring
	20, // 20: encore.runtime.v1.MetricsProvider.gcp:type_name -> encore.runtime.v1.MetricsProvider.GCPCloudMonitoring
	21, // 21: encore.runtime.v1.MetricsProvider.aws:type_name -> encore.runtime.v1.MetricsProvider.AWSCloudWatch
	22, // 22: encore.runtime.v1.MetricsProvider.prom_remote_write:type_name -> encore.runtime.v1.MetricsProvider.PrometheusRemoteWrite
	23, // 23: encore.runtime.v1.MetricsProvider.datadog:type_name -> encore.runtime.v1.MetricsProvider.Datadog
	32, // 24: encore.runtime.v1.EncoreAuthKey.data:type_name -> encore.runtime.v1.SecretData
	26, // 25: encore.runtime.v1.ServiceDiscovery.services:type_name -> encore.runtime.v1.ServiceDiscovery.ServicesEntry
	31, // 26: encore.runtime.v1.GracefulShutdown.total:type_name -> google.protobuf.Duration
	31, // 27: encore.runtime.v1.GracefulShutdown.shutdown_hooks:type_name -> google.protobuf.Duration
	31, // 28: encore.runtime.v1.GracefulShutdown.handlers:type_name -> google.protobuf.Duration
	11, // 29: encore.runtime.v1.EncorePlatform.platform_signing_keys:type_name -> encore.runtime.v1.EncoreAuthKey
	16, // 30: encore.runtime.v1.EncorePlatform.encore_cloud:type_name -> encore.runtime.v1.EncoreCloudProvider
	28, // 31: encore.runtime.v1.RateLimiter.token_bucket:type_name -> encore.runtime.v1.RateLimiter.TokenBucket
	11, // 32: encore.runtime.v1.EncoreCloudProvider.auth_keys:type_name -> encore.runtime.v1.EncoreAuthKey
	11, // 33: encore.runtime.v1.ServiceAuth.EncoreAuth.auth_keys:type_name -> encore.runtime.v1.EncoreAuthKey
	24, // 34: encore.runtime.v1.MetricsProvider.GCPCloudMonitoring.monitored_resource_labels:type_name -> encore.runtime.v1.MetricsProvider.GCPCloudMonitoring.MonitoredResourceLabelsEntry
	25, // 35: encore.runtime.v1.MetricsProvider.GCPCloudMonitoring.metric_names:type_name -> encore.runtime.v1.MetricsProvider.GCPCloudMonitoring.MetricNamesEntry
	32, // 36: encore.runtime.v1.MetricsProvider.PrometheusRemoteWrite.remote_write_url:type_name -> encore.runtime.v1.SecretData
	32, // 37: encore.runtime.v1.MetricsProvider.Datadog.api_key:type_name -> encore.runtime.v1.SecretData
	27, // 38: encore.runtime.v1.ServiceDiscovery.ServicesEntry.value:type_name -> encore.runtime.v1.ServiceDiscovery.Location
	7,  // 39: encore.runtime.v1.ServiceDiscovery.Location.auth_methods:type_name -> encore.runtime.v1.ServiceAuth
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_encore_runtime_v1_runtime_proto_init() }
func file_encore_runtime_v1_runtime_proto_init() {
	if File_encore_runtime_v1_runtime_proto != nil {
		return
	}
	file_encore_runtime_v1_infra_proto_init()
	file_encore_runtime_v1_secretdata_proto_init()
	file_encore_runtime_v1_runtime_proto_msgTypes[0].OneofWrappers = []any{}
	file_encore_runtime_v1_runtime_proto_msgTypes[4].OneofWrappers = []any{}
	file_encore_runtime_v1_runtime_proto_msgTypes[5].OneofWrappers = []any{
		(*ServiceAuth_Noop)(nil),
		(*ServiceAuth_EncoreAuth_)(nil),
	}
	file_encore_runtime_v1_runtime_proto_msgTypes[6].OneofWrappers = []any{
		(*TracingProvider_Encore)(nil),
	}
	file_encore_runtime_v1_runtime_proto_msgTypes[7].OneofWrappers = []any{
		(*MetricsProvider_EncoreCloud)(nil),
		(*MetricsProvider_Gcp)(nil),
		(*MetricsProvider_Aws)(nil),
		(*MetricsProvider_PromRemoteWrite)(nil),
		(*MetricsProvider_Datadog_)(nil),
	}
	file_encore_runtime_v1_runtime_proto_msgTypes[12].OneofWrappers = []any{}
	file_encore_runtime_v1_runtime_proto_msgTypes[13].OneofWrappers = []any{
		(*RateLimiter_TokenBucket_)(nil),
	}
	file_encore_runtime_v1_runtime_proto_msgTypes[17].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_encore_runtime_v1_runtime_proto_rawDesc), len(file_encore_runtime_v1_runtime_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_encore_runtime_v1_runtime_proto_goTypes,
		DependencyIndexes: file_encore_runtime_v1_runtime_proto_depIdxs,
		EnumInfos:         file_encore_runtime_v1_runtime_proto_enumTypes,
		MessageInfos:      file_encore_runtime_v1_runtime_proto_msgTypes,
	}.Build()
	File_encore_runtime_v1_runtime_proto = out.File
	file_encore_runtime_v1_runtime_proto_goTypes = nil
	file_encore_runtime_v1_runtime_proto_depIdxs = nil
}
