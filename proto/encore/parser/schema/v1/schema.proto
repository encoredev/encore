syntax = "proto3";

option go_package = "encr.dev/proto/encore/parser/schema/v1";

package encore.parser.schema.v1;

message Type {
  oneof typ {
    Named named = 1;
    Struct struct = 2;
    Map map = 3;
    List list = 4;
    Builtin builtin = 5;
  }
}

message Decl {
  uint32 id = 1;
  string name = 2;     // type name
  Type type = 3;
  string doc = 4;
  Loc loc = 5;
}

message Loc {
  string pkg_path = 1;
  string pkg_name = 2;
  string filename = 3;
  int32 start_pos = 4;
  int32 end_pos = 5;
  int32 src_line_start = 6;
  int32 src_line_end = 7;
  int32 src_col_start = 8;
  int32 src_col_end = 9;
}

message Named {
  uint32 id = 1;
}

message Struct {
  repeated Field fields = 1;
}

message Field {
  Type typ = 1;
  string name = 2;
  string doc = 3;
  // The optional json name if it's different from the field name.
  // The value "-" indicates to omit the field.
  string json_name = 4;
  // Whether the field is optional.
  bool optional = 5;
}

message Map {
  Type key = 1;
  Type value = 2;
}

message List {
  Type elem = 1;
}

enum Builtin {
  ANY = 0;
  BOOL = 1;
  INT8 = 2;
  INT16 = 3;
  INT32 = 4;
  INT64 = 5;
  UINT8  = 6;
  UINT16 = 7;
  UINT32 = 8;
  UINT64 = 9;
  FLOAT32 = 10;
  FLOAT64 = 11;
  STRING = 12;
  BYTES = 13;

  TIME = 14;
  UUID = 15;
  JSON = 16;
  USER_ID = 17;

  INT = 18;
  UINT = 19;
}