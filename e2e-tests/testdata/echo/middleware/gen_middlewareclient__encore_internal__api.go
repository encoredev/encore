// Code generated by encore. DO NOT EDIT.

package middlewareclient

import (
	"context"
	__api "encore.dev/appruntime/apisdk/api"
	jsoniter "github.com/json-iterator/go"
	"net/http"
	"net/url"
)

type EncoreInternal_ErrorReq = struct{}
type EncoreInternal_ResponseRewriteReq = *Payload
type EncoreInternal_ResponseRewriteResp = *Payload
type EncoreInternal_ResponseGenReq = *Payload
type EncoreInternal_ResponseGenResp = *Payload

func Error(ctx context.Context) error {
	panic("encore: client implementation not generated")
}

func ResponseRewrite(ctx context.Context, req EncoreInternal_ResponseRewriteReq) (EncoreInternal_ResponseRewriteResp, error) {
	panic("encore: client implementation not generated")
}

func ResponseGen(ctx context.Context, req EncoreInternal_ResponseGenReq) (EncoreInternal_ResponseGenResp, error) {
	panic("encore: client implementation not generated")
}

// Interface defines the service's API surface area, primarily for mocking purposes.
//
// Raw endpoints are currently excluded from this interface, as Encore does not yet
// support service-to-service API calls to raw endpoints.
type Interface interface {
	Error(ctx context.Context) error

	ResponseRewrite(ctx context.Context, req EncoreInternal_ResponseRewriteReq) (EncoreInternal_ResponseRewriteResp, error)

	ResponseGen(ctx context.Context, req EncoreInternal_ResponseGenReq) (EncoreInternal_ResponseGenResp, error)
}

var EncoreInternal_middlewareclient_api_APIDesc_Error = &__api.Desc[*EncoreInternal_ErrorReq, interface{}]{
	Access:     __api.Public,
	AppHandler: nil,
	CloneReq: func(r *EncoreInternal_ErrorReq) (*EncoreInternal_ErrorReq, error) {
		var clone *EncoreInternal_ErrorReq
		bytes, err := jsoniter.ConfigDefault.Marshal(r)
		if err == nil {
			err = jsoniter.ConfigDefault.Unmarshal(bytes, &clone)
		}
		return clone, err
	},
	CloneResp: nil,
	DecodeExternalResp: func(httpResp *http.Response, json jsoniter.API) (resp interface{}, err error) {
		return resp, nil
	},
	DecodeReq: func(httpReq *http.Request, ps __api.UnnamedParams, json jsoniter.API) (reqData *EncoreInternal_ErrorReq, pathParams __api.UnnamedParams, err error) {
		reqData = new(EncoreInternal_ErrorReq)
		return reqData, nil, nil
	},
	DefLoc: uint32(0x0),
	EncodeExternalReq: func(reqData *EncoreInternal_ErrorReq, stream *jsoniter.Stream) (httpHeader http.Header, queryString url.Values, err error) {
		return nil, nil, nil
	},
	EncodeResp: func(w http.ResponseWriter, json jsoniter.API, resp interface{}, status int) (err error) {
		return nil
	},
	Endpoint:            "Error",
	Fallback:            false,
	GlobalMiddlewareIDs: []string{},
	Methods:             []string{"GET", "POST"},
	Path:                "/middleware.Error",
	PathParamNames:      nil,
	Raw:                 false,
	RawHandler:          nil,
	RawPath:             "/middleware.Error",
	ReqPath: func(reqData *EncoreInternal_ErrorReq) (string, __api.UnnamedParams, error) {
		return "/middleware.Error", nil, nil
	},
	ReqUserPayload: func(reqData *EncoreInternal_ErrorReq) any {
		return nil
	},
	Service:           "middleware",
	ServiceMiddleware: []*__api.Middleware{},
	SvcNum:            0,
	Tags:              nil,
}

var EncoreInternal_middlewareclient_api_APIDesc_ResponseRewrite = &__api.Desc[*EncoreInternal_ResponseRewriteReq, EncoreInternal_ResponseRewriteResp]{
	Access:     __api.Public,
	AppHandler: nil,
	CloneReq: func(r *EncoreInternal_ResponseRewriteReq) (*EncoreInternal_ResponseRewriteReq, error) {
		var clone *EncoreInternal_ResponseRewriteReq
		bytes, err := jsoniter.ConfigDefault.Marshal(r)
		if err == nil {
			err = jsoniter.ConfigDefault.Unmarshal(bytes, &clone)
		}
		return clone, err
	},
	CloneResp: func(r EncoreInternal_ResponseRewriteResp) (EncoreInternal_ResponseRewriteResp, error) {
		var clone EncoreInternal_ResponseRewriteResp
		bytes, err := jsoniter.ConfigDefault.Marshal(r)
		if err == nil {
			err = jsoniter.ConfigDefault.Unmarshal(bytes, &clone)
		}
		return clone, err
	},
	DecodeExternalResp: func(httpResp *http.Response, json jsoniter.API) (resp EncoreInternal_ResponseRewriteResp, err error) {
		var result EncoreInternal_ResponseRewriteResp
		return result, nil
	},
	DecodeReq: func(httpReq *http.Request, ps __api.UnnamedParams, json jsoniter.API) (reqData *EncoreInternal_ResponseRewriteReq, pathParams __api.UnnamedParams, err error) {
		reqData = new(EncoreInternal_ResponseRewriteReq)
		return reqData, nil, nil
	},
	DefLoc: uint32(0x0),
	EncodeExternalReq: func(reqData *EncoreInternal_ResponseRewriteReq, stream *jsoniter.Stream) (httpHeader http.Header, queryString url.Values, err error) {
		return nil, nil, nil
	},
	EncodeResp: func(w http.ResponseWriter, json jsoniter.API, resp EncoreInternal_ResponseRewriteResp, status int) (err error) {
		return nil
	},
	Endpoint:            "ResponseRewrite",
	Fallback:            false,
	GlobalMiddlewareIDs: []string{},
	Methods:             []string{"POST"},
	Path:                "/middleware.ResponseRewrite",
	PathParamNames:      nil,
	Raw:                 false,
	RawHandler:          nil,
	RawPath:             "/middleware.ResponseRewrite",
	ReqPath: func(reqData *EncoreInternal_ResponseRewriteReq) (string, __api.UnnamedParams, error) {
		return "/middleware.ResponseRewrite", nil, nil
	},
	ReqUserPayload: func(reqData *EncoreInternal_ResponseRewriteReq) any {
		return reqData.Payload
	},
	Service:           "middleware",
	ServiceMiddleware: []*__api.Middleware{},
	SvcNum:            0,
	Tags:              nil,
}

var EncoreInternal_middlewareclient_api_APIDesc_ResponseGen = &__api.Desc[*EncoreInternal_ResponseGenReq, EncoreInternal_ResponseGenResp]{
	Access:     __api.Public,
	AppHandler: nil,
	CloneReq: func(r *EncoreInternal_ResponseGenReq) (*EncoreInternal_ResponseGenReq, error) {
		var clone *EncoreInternal_ResponseGenReq
		bytes, err := jsoniter.ConfigDefault.Marshal(r)
		if err == nil {
			err = jsoniter.ConfigDefault.Unmarshal(bytes, &clone)
		}
		return clone, err
	},
	CloneResp: func(r EncoreInternal_ResponseGenResp) (EncoreInternal_ResponseGenResp, error) {
		var clone EncoreInternal_ResponseGenResp
		bytes, err := jsoniter.ConfigDefault.Marshal(r)
		if err == nil {
			err = jsoniter.ConfigDefault.Unmarshal(bytes, &clone)
		}
		return clone, err
	},
	DecodeExternalResp: func(httpResp *http.Response, json jsoniter.API) (resp EncoreInternal_ResponseGenResp, err error) {
		var result EncoreInternal_ResponseGenResp
		return result, nil
	},
	DecodeReq: func(httpReq *http.Request, ps __api.UnnamedParams, json jsoniter.API) (reqData *EncoreInternal_ResponseGenReq, pathParams __api.UnnamedParams, err error) {
		reqData = new(EncoreInternal_ResponseGenReq)
		return reqData, nil, nil
	},
	DefLoc: uint32(0x0),
	EncodeExternalReq: func(reqData *EncoreInternal_ResponseGenReq, stream *jsoniter.Stream) (httpHeader http.Header, queryString url.Values, err error) {
		return nil, nil, nil
	},
	EncodeResp: func(w http.ResponseWriter, json jsoniter.API, resp EncoreInternal_ResponseGenResp, status int) (err error) {
		return nil
	},
	Endpoint:            "ResponseGen",
	Fallback:            false,
	GlobalMiddlewareIDs: []string{},
	Methods:             []string{"POST"},
	Path:                "/middleware.ResponseGen",
	PathParamNames:      nil,
	Raw:                 false,
	RawHandler:          nil,
	RawPath:             "/middleware.ResponseGen",
	ReqPath: func(reqData *EncoreInternal_ResponseGenReq) (string, __api.UnnamedParams, error) {
		return "/middleware.ResponseGen", nil, nil
	},
	ReqUserPayload: func(reqData *EncoreInternal_ResponseGenReq) any {
		return reqData.Payload
	},
	Service:           "middleware",
	ServiceMiddleware: []*__api.Middleware{},
	SvcNum:            0,
	Tags:              nil,
}
